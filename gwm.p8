pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
	pointer = {
		p_x = 64,
		p_y = 64,
		selected = "",
		speed = 8,
		move_cd = 0,
		base_cd = 2
	}
	grid = {
		g_size = 16,
		t_size = 8,
		tiles = {}
	}
	_init_grid()
end

function _init_grid()
	for row = 0, grid.g_size - 1 do
		for col = 0, grid.g_size - 1 do
			local id = col * grid.g_size + row
			add(grid.tiles, {
				t_id = id,
				t_row = row,
				t_col = col,
				floor_type = "grass", -- default
				sp_x = col * grid.t_size,
				ep_x = (col + 1) * grid.t_size,
				sp_y = row * grid.t_size,
				ep_y = (row + 1) * grid.t_size,
				entity_id = "",
				entity_side = "army",
				entity_type = "unit",
				selected = false,
				hovered = false
			})
		end
	end
end




function _update()
 	if pointer.move_cd > 0 then
 			pointer.move_cd -= 1
		else
		if btn(0) then
			pointer.p_x -= pointer.speed
			get_tile()
			pointer.move_cd = pointer.base_cd
		end
		if btn(1) then
			pointer.p_x += pointer.speed
			get_tile()
			pointer.move_cd = pointer.base_cd
		end
		if btn(2) then
			pointer.p_y -= pointer.speed
			get_tile()
			pointer.move_cd = pointer.base_cd
		end
		if btn(3) then
			pointer.p_y += pointer.speed
			get_tile()
			pointer.move_cd = pointer.base_cd
		end
	end
end
function get_tile(id)
	results = {}
	for tile in all(grid.tiles) do
		-- corriger les indices nれたgatifs (prれたventif)
		if tile.t_col < 0 then tile.t_col = 0 end
		if tile.t_row < 0 then tile.t_row = 0 end

		-- dれたtection du curseur sur la tuile
		if pointer.p_x >= tile.sp_x and pointer.p_x < tile.ep_x and
		   pointer.p_y >= tile.sp_y and pointer.p_y < tile.ep_y then
			tile.hovered = true
			if id == nil or tile.t_col == id then
				add(results, {tile.t_id, tile.t_col, tile.t_row})
			end
		else
			tile.hovered = false
		end
	end
	return results
end
function _draw()
	cls(5)
	spr(2, pointer.p_x, pointer.p_y) 				-- pointer sprite

	
	for tiles in all(grid.tiles) do
		spr(016, tiles.sp_x, tiles.sp_y)
		if tiles.hovered == true
			do
				spr(016, tiles.sp_x, tiles.sp_y)
				print("pointer x: "..pointer.p_x, 0, 0, 7)
				print("id: "..tiles.t_id) 												--
				print("col: "..tiles.t_col) 											--dev
				print("row: "..tiles.t_row) 											--
				print (get_tile(tiles.t_col-1)[1][1])
				spr(052, tiles.sp_x, tiles.sp_y) 										--draw bottom
				--spr(036, get_tile(tiles.t_col-1)[1], get_tile(tiles.t_col-1)[2])		--fetch upper tile
			end
	end
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000770077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000770077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000660000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000677777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000667777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000060770700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000066777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000066007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000006777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000006777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000767777670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000767777670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000767777670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000767777670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000077777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000077007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000066006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001010101010000000000000000000000000101010101010100000000000000000000000000000001010101010101010101010
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000
